"use strict";angular.module("ra.form",[]),angular.module("ra.form").directive("errorOn",function(){return{require:"^form",restrict:"A",replace:!0,scope:!0,template:'<span class="text-danger" ng-show="show_error" ng-transclude></span>',transclude:!0,link:function(a,b,c,d){var e=c.errorOn.split(","),f=_.str.trim(e[0]),g=_.str.trim(e[1]),h=function(){var b=a[d.$name]&&a[d.$name][f]&&a[d.$name][f].$error[g];return b};a.$watch(d.$name+"."+f+".show_errors",function(b){a.show_error=b&&h()?!0:!1})}}}),angular.module("ra.form").directive("raForm",function(a){return{restrict:"A",require:"form",link:function(b,c,d,e){var f=b[d.raForm];if(_.isUndefined(f)||_.isFunction(f.update)===!1)throw new Error('You must provide an update callback. e.g. <form ra-form="form_events">,where $scope.form_events = { update: callbackFn }');b[e.$name]=_.extend(b[e.$name],a.actions,f)}}}),angular.module("ra.form").directive("validateOn",function(){return{require:["^form","ngModel"],restrict:"A",link:function(a,b,c,d){var e=d[0],f=d[1],g=function(){"blur"===c.validateOn?h():"submit"===c.validateOn&&i()},h=function(){_.each("focus blur".split(" "),function(c){b.on(c,function(){a.$apply(function(){e[c](f.$name)})})})},i=function(){e.onSubmit(function(){e.blur(f.$name)})},j=a.$watch(function(){return e.initialized},function(){j(),g()})}}}),angular.module("ra.form").factory("raForm",function(){return{actions:{initialized:!0,submitting:!1,submitCallbacks:[],showErrors:function(a){a&&this[a]&&(this[a].show_errors=!0)},hideErrors:function(a){a&&this[a]&&(this[a].show_errors=!1)},showErrorsOnInValid:function(){var a=this;_.each(a.$error,function(b){_.each(b,function(b){a.showErrors(b.$name)})})},setValidity:function(a,b,c){this[a].$setValidity(b,c),this.showErrors(!c)},errorOn:function(a,b){return this[a]&&this[a].show_errors?this[a].show_errors&&this[a].$error[b]:void 0},focus:function(a){this.hideErrors(a)},blur:function(a){this.change(a),this.showErrors(a)},change:function(a){if(this.validations){var b=this.validations[a];_.isFunction(b)&&b()}},onSubmit:function(a){this.submitCallbacks.push(a)},submit:function(){_.each(this.submitCallbacks,function(a){_.isFunction(a)&&a()}),_.isFunction(this.validation)&&this.validation(),this.$valid?(this.submitting=!0,this.update()):this.showErrorsOnInValid()}}}});