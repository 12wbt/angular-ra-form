"use strict";angular.module("ra.form",[]),angular.module("ra.form").directive("errorFor",function(){return{restrict:"A",replace:!0,scope:!0,template:'<p class="form-error" ng-show="errors.length > 0" ng-transclude></p>',transclude:!0,controller:["$scope","$element","$attrs",function(a,b,c){a.errors=[],this.show=function(b){_.contains(a.errors,b)||a.errors.push(b)},this.hide=function(b){a.errors=_.reject(a.errors,b)},this.name=c.errorFor}]}}).directive("errorOn",function(){return{require:["^form","?^errorFor"],restrict:"A",replace:!0,scope:!0,template:'<span class="text-danger" ng-show="show_error" ng-transclude></span>',transclude:!0,link:function(a,b,c,d){var e,f,g=d[0],h=d[1];if(h)e=h.name,f=c.errorOn;else{var i=c.errorOn.split(",");e=_.str.trim(i[0]),f=_.str.trim(i[1])}var j=function(){var b=a[g.$name]&&a[g.$name][e];return b},k=function(){var a=j();return!(!a||!a.$error[f])},l=function(){var a=j();return!(!a||!a.show_errors)};a.$watch(l,function(a){a===!0&&k()===!0?m():n()}),a.$watch(k,function(a){l()===!0&&a===!0?m():n()});var m=function(){a.show_error=!0,h&&h.show(f)},n=function(){a.show_error=!1,h&&h.hide(f)}}}}),angular.module("ra.form").directive("raForm",["raForm",function(a){return{restrict:"A",require:"form",link:function(b,c,d,e){var f=b[d.raForm];if(_.isUndefined(f)||_.isFunction(f.update)===!1)throw new Error('You must provide an update callback. e.g. <form ra-form="form_events">,where $scope.form_events = { update: callbackFn }');var g=b[e.$name];_.extend(g,a()),_.extend(g,f),b[e.$name]=g}}}]),angular.module("ra.form").directive("validateOn",function(){return{require:["^form","ngModel"],restrict:"A",link:function(a,b,c,d){var e=d[0],f=d[1],g=function(){"blur"===c.validateOn?h():"submit"===c.validateOn&&i()},h=function(){_.each("focus blur".split(" "),function(c){b.on(c,function(){a.$apply(function(){e[c](f.$name)})})})},i=function(){e.onSubmit(function(){e.blur(f.$name)})},j=a.$watch(function(){return e.initialized},function(){j(),g()})}}}),angular.module("ra.form").factory("raForm",function(){return function(){return{initialized:!0,submitting:!1,submitCallbacks:[],showErrors:function(a){a&&this[a]&&(this[a].show_errors=!0)},hideErrors:function(a){a&&this[a]&&(this[a].show_errors=!1)},showErrorsOnInValid:function(){var a=this;_.each(a.$error,function(b){_.each(b,function(b){a.showErrors(b.$name)})})},setValidity:function(a,b,c){this[a].$setValidity(b,c),this.showErrors(a)},errorOn:function(a,b){return this[a]&&this[a].show_errors?this[a].show_errors&&this[a].$error[b]:void 0},focus:function(a){this.hideErrors(a)},blur:function(a){this.change(a),this.showErrors(a)},change:function(a){if(this.validations){var b=this.validations[a];_.isFunction(b)&&b()}},onSubmit:function(a){this.submitCallbacks.push(a)},submit:function(){var a=!0;_.each(this.submitCallbacks,function(a){_.isFunction(a)&&a()}),_.isFunction(this.validation)&&(a=this.validation()),this.$valid&&a!==!1?(this.submitting=!0,this.update()):this.showErrorsOnInValid()}}}});